# using standard lib csv module to read and write csv files
# The csv module implements classes to read and write tabular data in CSV format.
# It allows programmers to say, “write this data in the format preferred by Excel,”
# or “read data from this file which was generated by Excel,” without knowing the precise details of the CSV format used by Excel.
# Programmers can also describe the CSV formats understood by other applications or define their own special-purpose CSV formats.
# The csv module’s reader and writer objects read and write sequences.
# Programmers can also read and write data in dictionary form using the DictReader and DictWriter classes.

import csv

def add_contact(fname, lname, num, address):
    contact = {}
    contact["FName"] = fname
    contact["LName"] = lname
    contact["Number"] = num
    contact["Address"] = address
    return contact

address_book = []
q = ''
while True:
    fn = input("FName: ")
    ln = input("LName: ")
    num = input("Number: ")
    add = input("Address: ")
    address_book.append(add_contact(fn, ln, num, add))
    q = input("q to quit...")
    if q == 'q':
        break

with open('C:\\TestData\\MyContacts.csv', 'w', newline='') as csvfile:
    fieldnames = ["FName", "LName", "Number", "Address"]
    writer = csv.DictWriter(csvfile, fieldnames=fieldnames)
    writer.writeheader()
    for record in address_book:
        writer.writerow(record)
